#!/usr/bin/rb

mni = 1
mvi = 1
n_gen = 1e6
n_burn = 0
sample_freq = 100

n_plant_tips <- phy_plant.ntips()
n_plant_branches <- 2 * n_plant_tips - 2
n_insect_branches <- 2 * phy_insect.ntips() - 2
n_sites <- dat_insect.nchar()

switch_rates_pos ~ dnDirichlet( [1,1,1,1] )
switch_rate_0_to_1 := switch_rates_pos[1]
switch_rate_0_to_2 := 0.
switch_rate_1_to_0 := switch_rates_pos[2]
switch_rate_1_to_2 := switch_rates_pos[3]
switch_rate_2_to_0 := 0.
switch_rate_2_to_1 := switch_rates_pos[4]

switch_rates := v( switch_rate_0_to_1, switch_rate_0_to_2, switch_rate_1_to_0, switch_rate_1_to_2, switch_rate_2_to_0, switch_rate_2_to_1 )

Q_char := fnFreeK( switch_rates, false, "eigen" )

phy_scale[1] ~ dnExp(1)
phy_scale[2] := phy_scale[1]

rate_modifiers[1] := fnHostSwitchRateModifier(tree=phy_plant, gainScale=phy_scale)

Q_host := fnRateGeneratorSequence(Q=Q_char,
                                  numChars=n_sites,
                                  rateModifiers=rate_modifiers)

clock_host ~ dnExp(1)

rf_host <- simplex(1,1,1)

m_host ~ dnPhyloCTMCDASequence(tree=phy_insect,
                               Q=Q_host,
                               branchRates=clock_host,
                               rootFrequencies=rf_host,
                               nSites=n_sites,
                               type="Standard")

m_host.clamp(dat_insect)

mv[mvi++] = mvScale( phy_scale[1], weight=1 )
mv[mvi++] = mvSimplex(switch_rates_pos, alpha=30, weight=5, tune=false)
mv[mvi++] = mvScale(clock_host, weight=5, lambda = 0.5)
mv[mvi++] = mvCharacterHistory(ctmc=m_host,
                               qmap_seq=Q_host,
                               lambda=0.2,
                               graph="node",
                               proposal="rejection",
                               weight=n_insect_branches)
mv[mvi++] = mvCharacterHistory(ctmc=m_host,
                               qmap_seq=Q_host,
                               lambda=0.2,
                               graph="branch",
                               proposal="rejection",
                               weight=n_insect_branches*2)

mn[mni++] = mnScreen(clock_host, phy_scale[1], printgen=sample_freq)
mn[mni++] = mnModel(printgen=sample_freq, filename=out_fn + ".log")
mn[mni++] = mnCharacterHistorySummary( filename=out_fn + ".history.txt",
                                       ctmc=m_host,
                                       tree=phy_insect,
                                       printgen=sample_freq )

mdl = model(m_host)

